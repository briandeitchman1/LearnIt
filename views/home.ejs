<% layout("./layouts/boilerplate") %>
    <div class="row">
        <div class="col">
            <h1 class="fade-in">Hey I'm Brian </h1>
            <h1>Deitchman</h1>
        </div>
        <div class="col">
            <a href="https://www.linkedin.com/in/briandeitchman/">
                <img src="../images/inkedin_network_social network_linkedin logo_icon.png" alt="">

            </a>
            <a href="mailto: briandeitchman@gmail.com">
                <img src="../images/email_envelope_gmail_letter_logo_icon.png" alt="">
            </a>
            <a href="https://github.com/briandeitchman1">
                <img src="../images/298822_github_mark_icon.png" alt="">
            </a>


        </div>
        <div class="col">

        </div>
    </div>
    <div class=" row justify-content-center align-items-center fade-in">
        <div class="col ">
            <img class="myBorder" src="../images/smile_3_10.jpg" alt="">

        </div>
        <div class="col">
            <ul>
                <li>
                    <h2>I have a B.S. in computer science from CSU East Bay.</h2>
                </li>
                <li>
                    <h2>I graduated spring 2021 with a 3.8gpa.</h2>
                </li>
                <li>
                    <h2>
                        Some of my favorite classes at East Bay were
                        A.I., Mobile programming, and Linux administration.
                    </h2>
                </li>
            </ul>

        </div>
        <div class="col">
            <img class="myBorder" src="../images/Webp.net-resizeimage.jpg" alt="">
        </div>


    </div>


    <h1 class=" fade-in my-5"> My projects:</h1>
    <div class="row">
        <div class="col">
            <img class="from-left slide-in" src="../images/node_js.png" alt="">
        </div>
        <div class="col from-right slide-in my-5">
            <h2>This <a href="https://github.com/briandeitchman1/website">website</a>(github link) was built using
                Node.js and Express, it implements the CRUD system. It uses get, post, delete, patch, and put to serve
                webpages. MongoDB Atlas is used for the database, while Mongoose is used to add user information.
                Registering a user and authentication are handled by the Passport API. Usernames and hasheds
                passwords are saved to the Mongo database</h2>
        </div>
    </div>

    <h2 class="fade-in">This website is hosted by Heroku</h2>
    <div class="row align-items-center">
        <div class="col"> <img class="fade-in" src="../images/mongoDBAtlas_50.jpg" alt=""></div>
        <div class="col"><img class="fade-in" src="../images/herokuLogo.png" alt=""></div>
    </div>


    <div class="row my-3 fade-in align-items-center">

        <div class="col">
            <h4>The original point of this website was to build something similar to quizlet. This site lets you
                create
                cheatsheets with flashcards and multiple choice questions that you can then use to quiz yourself
                with.
                You can create, edit, delete, and view these cheatsheets. All the cheatsheets are stored on the Mongo
                database and can only be edited/deleted by the creator of the page. If you want to create a
                cheatsheet
                you have to make an account first and login.</h4>
            <a href="./study">
                <img src="../images/show_50.png" alt="">
            </a>
        </div>
        <div class="col">
            <a href="./study">
                <img src="../images/create_50.png" alt="">
            </a>
        </div>
        </a>
    </div>
    <div class="row fade-in my-3 justify-content-center align-items-center">
        <div class="col">
            <a href="https://reactscrabblecheater.herokuapp.com/">
                <img src="../images/reactScrabbleCheater_50.png">
            </a>
        </div>
        <div class="col">
            <h1> <a href="https://reactscrabblecheater.herokuapp.com/">Scrabble cheating tool</a> and <a
                    href="https://github.com/briandeitchman1/React-scrabble-cheater">github</a></h1>
            <h3>This app uses Mongo Express React and Node (MERN). It processes a text file with almost 300,000
                scrabble legal words into a map on the backend. The React/frontend side then uses fetch to send get
                requests to
                receive
                all possible combinations of words from those letters. The state is updated to show the list of words.
                Users can also save or delete their favorite words to the mongo database.
            </h3>

        </div>
    </div>
    <div class="row justify-content-center align-items-center fade-in my-3">
        <div class="col">
            <h1> <a href="https://brianscal.herokuapp.com/">React Calculator</a> and <a
                    href="https://github.com/briandeitchman1/React-Calculator">github</a></h1>
            <h3> The hardest part about making the calculator was making the order of operations work correctly. The
                best way to do this was to convert the equation from infix notation to postfix using the <a
                    href="https://en.wikipedia.org/wiki/Shunting_yard_algorithm">Shunting yard algorithm</a>. The
                algorithm requires you to push and pop the digits and operators on to a stack and a queue
                until you have them in the correct order. The algorithm was a little tricky to implement and I consider
                it the coolest part of the calculator. The calculators body is mostly made of reusable button
                components. The Top screen and Answer History use State to store the numbers.</h3>
        </div>
        <div class="col">
            <a href="https://brianscal.herokuapp.com/">
                <img src="../images/reactCalculator.png" alt="">
            </a>
        </div>
    </div>
    <div class="row justify-content-center">
        <div class="col">
            <h2 class="fade-in">Another app on this website is my spelling Bee game.</h2>
            <h3 class="fade-in">It has a list of spelling bee words taken from spellingBee.com that it randomly picks
                from. It then uses a text to speech API to tell you what to spell.
            </h3>
        </div>
        <div class="col">
            <a href="./spell">
                <img class="slide-in from-left" src="../images/spellingBee.png" alt="">
            </a>
        </div>
    </div>

    <div class="row justify-content-evenly">
        <div class="col">
            <a href="https://replit.com/@BrianDeitchman">
                <img class="slide-in from-left" src="../images/c++Cropped.png" alt="">
            </a>
        </div>
        <div class="col">
            <h3 class="slide-in from-right">The data from spellingBee.com was not in a program friendly collection, so I
                made a
                C++ program to
                convert the data into a .JSON file. C++ was the first language I coded in and I feel very comfortable
                with it and with pointers. The picture links to my Replit page which has some projects I've worked on.
            </h3>
        </div>
    </div>
    <div class="row">
        <div class="col fade-in">
            <h2>The last project on this website is the game Simon Says. Each color has a different sound
                effect that plays when clicked. All squares flash green when you get the sequence correct and black
                when you get it wrong.</h2>
        </div>
        <div class="col fade-in">
            <a href="./simonsays">
                <div class="col"><img class="" src="../images/simonsays.png" alt=""></div>
            </a>
        </div>

    </div>




    <script src="../controller/home.js"></script>